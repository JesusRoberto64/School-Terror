[gd_scene load_steps=4 format=2]

[ext_resource path="res://UI/800X600blank.png" type="Texture" id=1]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;

uniform float scan_line_float : hint_range(0, 1080) = 50.0;

vec2 uv_curve(vec2 uv){
	
	uv = (uv - 0.5) * 2.0;
	
	uv.x *= 1.0 + pow(abs(uv.y) / 4.0, 2.0);
	uv.y *= 1.0 + pow(abs(uv.x) / 5.0, 2.0);
	
	uv /= 1.2;
	
	uv = (uv / 2.0) + 0.5;  
	
	return uv;
}

void fragment(){
	//vec4 color = texture(SCREEN_TEXTURE,uv_curve(SCREEN_UV));
	float PI = 3.14159;
	
	float r = texture(SCREEN_TEXTURE,uv_curve(SCREEN_UV) + vec2(SCREEN_PIXEL_SIZE.x*0.0),0.0).r;
	float g = texture(SCREEN_TEXTURE,uv_curve(SCREEN_UV) + vec2(SCREEN_PIXEL_SIZE.x*1.0),0.0).g;
	float b = texture(SCREEN_TEXTURE,uv_curve(SCREEN_UV) + vec2(SCREEN_PIXEL_SIZE.x*-1.0),0.0).b;
	
	float s = sin(uv_curve(SCREEN_UV).y * scan_line_float * PI);
	s = (s * 0.5 + 0.5) * 0.9 + 0.1;
	
	vec4 scan_line = vec4(vec3(pow(s,0.25)), 1.0);
	
	COLOR = vec4(r,g,b,1.0) * scan_line;
	
	//COLOR = color;
}"
custom_defines = ""

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )
shader_param/scan_line_float = 480.0

[node name="ShaderCRT" type="TextureRect"]
material = SubResource( 2 )
anchor_right = 1.0
anchor_bottom = 1.0
texture = ExtResource( 1 )
__meta__ = {
"_edit_use_anchors_": false
}
